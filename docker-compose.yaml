
services:      
  user-bot:
    container_name: dd-user-bot
    volumes:
      - ./common:/app/src/common
    build:
      context: user-bot/
    env_file:
      - database/.db.env
      - mongo/.fsm.env
      - user_token.env
    restart: always
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy
      
  staff-bot:
    container_name: dd-staff-bot
    volumes:
      - ./common:/app/src/common
    build:
      context: staff-bot/
    env_file:
      - database/.db.env
      - mongo/.fsm.env
      - staff_token.env
    restart: always
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_healthy
        
  db:
    container_name: dd-database
    image: postgres:latest
    env_file:
      - database/.db.env
    volumes:
      - donor_day_postgres_data:/var/lib/postgresql/data
      - ./database/init_scripts:/docker-entrypoint-initdb.d
      - /etc/localtime:/etc/localtime:ro
    restart: always
    ports:
      - 127.0.0.1:12345:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dd_user -d dd_database'"]
      interval: 5s
      timeout: 3s
      retries: 3
        
  mongo:
    container_name: dd-mongo
    image: mongo:7
    env_file:
      - ./mongo/.root.env
      - ./mongo/.fsm.env
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - ./mongo/init_mongo.sh:/docker-entrypoint-initdb.d/init.sh:ro
      - donor_day_mongo_data:/data/db
      - /etc/localtime:/etc/localtime:ro
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 3s
      retries: 3
      
volumes:
  donor_day_mongo_data:
  donor_day_postgres_data:
  
